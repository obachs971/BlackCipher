using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using KModkit;
using System;
using System.Linq;

public class ultimateCipher : MonoBehaviour {
    
    public TextMesh[] screenTexts;
    public KMBombInfo Bomb;
    public KMBombModule module;
    public AudioClip[] sounds;
    public KMAudio Audio;
    public TextMesh submitText;
    private List<List<string>> wordList = new List<List<string>>()
        {
            //4
            new List<string>()
            {
                "ALSO","AREA","ABLE","AWAY","ACID","AGED","ACRE","ARCH","AXIS","ALLY","ALAS","AURA","ATOM","AXES","ACHE","AMEN","ACNE","AXLE","AQUA",
                "BEEN","BACK","BOTH","BEST","BOOK","BASE","BODY","BILL","BLUE","BALL","BORN","BABY","BEAT","BAND","BEAR","BELL","BUSY","BOND","BUSH","BOAT","BOWL","BIRD","BLOW","BONE","BATH","BOSS","BELT","BOMB","BURN","BASS","BOLD","BEEF","BENT","BEND","BIKE","BOOT","BEAM","BLEW","BARN","BUZZ","BEAN","BATS","BUST","BOLT","BURY","BOIL","BAKE","BUMP","BAIT","BULB","BLUR","BEAD",
                "COME","CAME","COST","CALL","CITY","CASE","CARE","CASH","CLUB","CORE","CODE","CARD","COLD","COPY","CELL","CAST","CHIP","COOL","CAMP","COOK","COAL","CREW","CHAT","CROP","COAT","CALM","CAKE","CORN","CLAY","COIN","CART","CAPE","CHEF","CLUE","CAGE","CAVE","CURB","CLIP","CROW","CONE","CUBE","CORK","CALF","COIL","CANE","CUTE","CHOP","CRAB","COMB","CURL","CLAW","CLOG","CLAP","CRIB","CLAM","COZY",
                "DOWN","DATA","DAYS","DATE","DONE","DEAL","DOOR","DEEP","DARK","DUTY","DROP","DRAW","DREW","DESK","DISK","DEAR","DUST","DIAL","DENY","DAWN","DISH","DRAG","DECK","DIRT","DARE","DEAF","DUCK","DOCK","DRUM","DEER","DOME","DASH","DOLL","DAMP","DIVE","DEED","DENT","DOVE","DICE","DUSK","DART","DINE","DRIP","DUET","DUEL",
                "EVEN","EACH","EVER","EASY","ELSE","EAST","EDGE","EASE","EARN","EXIT","ECHO","EXAM","EDIT","EPIC","EYES","EARS","FROM",
                "FULL","FORM","FIND","FACT","FREE","FACE","FIRM","FOOD","FELT","FEET","FALL","FAST","FIRE","FINE","FILM","FLOW","FOOT","FAIR","FILE","FELL","FLAT","FISH","FARM","FILL","FAIL","FEED","FORT","FATE","FAME","FLAG","FLEW","FOLK","FOLD","FLED","FOAM","FORK","FAKE","FLEX","FLIP","FOIL","FADE","FLEE","FROG","FUSE","FONT","FLAW",
                "GOOD","GIVE","GAME","GAVE","GOES","GOAL","GONE","GROW","GAIN","GOLD","GREW","GOLF","GIFT","GATE","GLAD","GEAR","GRAY","GREY","GRID","GRIP","GRAB","GLOW","GILL","GLUE","GRIN","GOAT","GRAM","GASP","GERM","GLEE","GONG","GUST",
                "HAVE","HIGH","HERE","HOME","HELP","HELD","HALF","HEAD","HAND","HARD","HOPE","HOLD","HOUR","HALL","HEAR","HUGE","HILL","HOST","HAIR","HEAT","HOLE","HIRE","HUNT","HERO","HIDE","HOOK","HINT","HORN","HOOD","HEAL","HEEL","HAWK","HEIR","HERB","HERD","HAIL","HOSE","HIKE","HARE","HUSH","HOWL",
                "INTO","IDEA","ITEM","IRON","INCH","INFO","ICON","IDLE","IDOL","ICED","ITCH",
                "JUST","JOIN","JUMP","JURY","JAZZ","JOKE","JUNK","JINX","JARS","JOBS",
                "KNOW","KEEP","KIND","KNEW","KING","KEPT","KICK","KNEE","KNIT","KNOT","KITE","KNOB","KIWI","KELP",
                "LIKE","LAST","LONG","LIFE","LOOK","LESS","LINE","LEFT","LIVE","LEAD","LATE","LOSS","LIST","LOST","LAND","LOVE","LACK","LINK","LOSE","LAKE","LOAD","LAID","LANE","LIFT","LOCK","LUCK","LOUD","LOOP","LEAP","LAWN","LEAF","LION","LAMB","LAMP","LAZY","LEAK","LIME","LURE","LIED","LAVA","LIAR","LOAF","LAIR",
                "MORE","MOST","MADE","MUCH","MANY","MAKE","MUST","MEET","MOVE","MEAN","MAIN","MIND","MASS","MAIL","MISS","MINE","MILE","MODE","MILL","MILK","MEAL","MEAT","MENU","MOOD","MOON","MILD","MESS","MYTH","MASK","MALL","MICE","MELT","MOSS","MIST","MINT","MOLD","MONK","MAZE","MATH","MOLE","MUTE","MIME","MULE","MOTH","MOAT",
                "NEED","NEXT","NEWS","NAME","NOTE","NEAR","NONE","NICE","NECK","NOSE","NOON","NEAT","NEST","NAIL","NEON","NOUN","NUMB","NEWT","NOOK",
                "ONLY","OVER","OPEN","ONCE","ONTO","OKAY","OURS","OVEN","OVAL","ODOR","OATH","OMIT","OMEN","OOZE","OBOE","ORCA","OGRE","OINK","ORES",
                "PART","PAST","PLAN","PLAY","PAID","PARK","PAGE","POOR","PLUS","POST","PASS","PATH","PICK","POOL","PACE","PORT","PAIR","PUSH","PULL","PEAK","PURE","PINK","PACK","PALM","PIPE","PLOT","PLUG","PUMP","POET","PALE","POSE","POEM","POND","POLE","PILE","POUR","PLEA","PORK","PROP","PIER","PEEL","PONY","PINT","PLUM","PEEK","POKE","PEAR","PAWN","PLOW","PERK",
                "QUIT","QUIZ",
                "REAL","RATE","RISK","ROLE","ROOM","ROAD","READ","REST","ROSE","RICH","RISE","RULE","RACE","ROCK","RELY","RING","ROLL","RARE","RAIN","RENT","RIDE","RAIL","ROOF","RANK","RUSH","ROOT","REAR","RICE","RACK","RAMP","ROPE","RODE","RIPE","RUIN","RASH","ROAR","RUBY","RUST","RAFT","ROAM","ROBE","RAKE",
                "SAID","SOME","SUCH","SAME","SITE","SHOW","SEEN","SIDE","SURE","SIZE","SALE","SOLD","SAFE","SOON","STOP","STEP","SELL","STAY","SENT","SORT","SEND","SIGN","STAR","SAVE","SHOP","SELF","SEEK","SLOW","SOFT","SPOT","SEAT","SUIT","SHIP","SALT","SONG","SOIL","SNOW","SAND","SEED","SLIP","SPIN","SING","SHED","SEAL","SOUP","SOLO","SLOT","SCAN","SINK","SOAP","SILK","SHOE","SLIM","SWIM","SWAP","SNAP","STIR","SANG","SPUN","SAIL","SKIP","SLID","SWAN","SOUR","SLAM","SANK","SODA","SOFA","SUNK","SLAB","SOAR",
                "THAT","THIS","THEY","THEM","THEN","TIME","THAN","TAKE","TEAM","TOOK","TERM","TOLD","TURN","TYPE","TRUE","TELL","TEST","TALK","TOWN","TEXT","TASK","TOUR","TRIP","TEND","THIN","TREE","TAPE","TINY","TONE","TALL","TOLL","TANK","TALE","TWIN","TUNE","TUBE","TAIL","TIER","TRAP","TEAR","TIDE","TORN","TAXI","TRIM","TRIO","TRAY","TENT","TOSS","TIRE","TORE","TILE","TIDY","TILT","TUCK","TUNA","TAME","THAW","TOAD","TOIL","TACO","TEAL","THUD",
                "USED","UPON","UNIT","USER","URGE","UNDO","USES",
                "VERY","VIEW","VAST","VARY","VOID","VINE","VERB","VEST","VENT","VIAL",
                "WITH","WERE","WILL","WHAT","WHEN","WELL","WORK","WANT","WEEK","WENT","WIDE","WEST","WIRE","WORD","WALL","WISH","WALK","WAIT","WOOD","WIND","WARM","WILD","WEAR","WEAK","WAVE","WASH","WING","WISE","WORE","WORN","WOLF","WRAP","WOOL","WIPE","WORM","WARP","WELD","WAND","WAVY","WAXY",
                "XYLO",
                "YOUR","YEAR","YARD","YARN","YOGA","YELL","YAWN",
                "ZONE","ZOOM"
            },
            //5
            new List<string>()
            {
                "ABOUT", "AFTER", "AMONG", "AGAIN", "ABOVE", "ALONG", "AWARD", "ALLOW", "ALONE", "AHEAD", "APPLY", "AWARE", "AVOID", "AGENT", "ASSET", "AGREE", "ADULT", "APART", "AUDIO", "ASIDE", "ARRAY", "ALIVE", "ARGUE", "APPLE", "ACUTE", "ADMIT", "ARENA", "ACTOR", "ALERT", "ALBUM", "ALTER", "ANGLE", "ALARM", "ADAPT", "ANGEL", "ANKLE", "ALIEN", "ARROW", "ALLEY", "AWAKE", "AMEND", "ARMOR", "ALIGN", "ALTAR", "ALLOY", "AMBER", "ATTIC", "AGILE", "AROMA", "APRON", "ACORN", "ADORE", "AMUSE", "ABYSS",
                "BOARD", "BEGAN", "BRING", "BUILT", "BLACK", "BASIC", "BELOW", "BUILD", "BEGIN", "BREAK", "BROWN", "BEACH", "BRAND", "BLOCK", "BEGUN", "BRIEF", "BROKE", "BOUND", "BOOST", "BUYER", "BAKER", "BLIND", "BREAD", "BENCH", "BURST", "BONUS", "BRICK", "BLEND", "BRUSH", "BLANK", "BUNCH", "BRAVE", "BLOWN", "BLAST", "BATCH", "BRASS", "BACON", "BAKED", "BLOOM", "BERRY", "BEARD", "BRAKE", "BOXER", "BURNT", "BADGE", "BLAND", "BLISS", "BUNNY", "BULKY", "BLUFF", "BLINK",
                "COULD", "CHIEF", "CAUSE", "CLASS", "CLOSE", "CLEAR", "CHILD", "COVER", "CROSS", "CARRY", "CLAIM", "CHECK", "CIVIL", "CHAIN", "COAST", "CLEAN", "CHAIR", "CYCLE", "CABLE", "COUNT", "CATCH", "CROWD", "CROWN", "CLOCK", "CHART", "CHEAP", "CRASH", "CHASE", "CURVE", "CLICK", "CRAFT", "CLIMB", "CRAZY", "CLOUD", "CARGO", "COLOR", "COMIC", "CLOTH", "CHAOS", "CANAL", "CLIFF", "CEASE", "CHARM", "CREEK", "CABIN", "CRANE", "CLASH", "CORAL", "CHEER", "CANDY", "CHILL", "CREST", "CHALK", "COUCH", "CRUST", "CHESS", "CHUNK", "CRAWL",
                "DAILY", "DRIVE", "DEPTH", "DRAWN", "DOUBT", "DREAM", "DRINK", "DANCE", "DELAY", "DOZEN", "DROVE", "DRESS", "DEBUT", "DEALT", "DRILL", "DRIED", "DAIRY", "DENSE", "DRAIN", "DIARY", "DERBY", "DRIFT", "DIGIT", "DECAY", "DEBIT", "DRANK", "DUSTY", "DODGE", "DISCO", "DAISY", "DOUGH", "DWARF", "DIZZY", "DINER", "DONUT",
                "EVERY", "EARLY", "EVENT", "EXTRA", "ENJOY", "ENTER", "EQUAL", "ENTRY", "EARTH", "EXIST", "ERROR", "EMPTY", "EXACT", "EAGER", "EAGLE", "ESSAY", "ELDER", "ELBOW", "EATEN", "EQUIP", "ERASE", "EVADE",
                "FIRST", "FOUND", "FIELD", "FINAL", "FORCE", "FRONT", "FOCUS", "FLOOR", "FIXED", "FIBER", "FRESH", "FIFTH", "FRAME", "FORUM", "FALSE", "FAULT", "FRUIT", "FUNNY", "FLASH", "FLUID", "FLOOD", "FENCE", "FANCY", "FROST", "FLOAT", "FLIES", "FLAME", "FORGE", "FAINT", "FLOUR", "FEAST", "FAIRY", "FAVOR", "FLUSH", "FLAIR", "FLARE", "FUZZY", "FROZE", "FLUTE", "FOYER", "FUDGE", "FLASK",
                "GROUP", "GOING", "GREAT", "GIVEN", "GREEN", "GUIDE", "GRAND", "GLASS", "GROWN", "GRADE", "GIANT", "GUEST", "GUESS", "GRASS", "GRAIN", "GRASP", "GRAPH", "GLORY", "GAUGE", "GHOST", "GRILL", "GRAMS", "GREET", "GLOVE", "GOOSE", "GRAPE", "GLIDE", "GRAVY", "GEESE", "GENIE",
                "HOUSE", "HUMAN", "HEART", "HOTEL", "HAPPY", "HEAVY", "HORSE", "HABIT", "HEDGE", "HONEY", "HURRY", "HANDY", "HONOR", "HATCH", "HOBBY", "HAIRY", "HASTE", "HINGE", "HUSKY", "HUMID", "HOUND", "HUMOR", "HIPPO", "HYENA",
                "ISSUE", "IMAGE", "IDEAL", "INDEX", "INPUT", "INNER", "IMPLY", "IRONY", "IVORY", "ICING", "IDIOM", "INTRO", "ITCHY", "INGOT", "IGLOO", "ITEMS", "IDEAS",
                "JOINT", "JUDGE", "JUICE", "JEWEL", "JOLLY", "JELLY", "JUMBO", "JUICY", "JOKER", "JUMPS",
                "KNOCK", "KITTY", "KAYAK", "KNEEL", "KARAT", "KNEAD", "KOALA", "KABOB", "KAZOO",
                "LOCAL", "LARGE", "LEVEL", "LATER", "LIGHT", "LOWER", "LEAVE", "LEARN", "LIVES", "LEAST", "LINKS", "LIMIT", "LUNCH", "LAYER", "LABEL", "LOGIC", "LUCKY", "LAUGH", "LASER", "LOYAL", "LOBBY", "LIVER", "LODGE", "LEMON", "LEVER", "LITER", "LEAPT", "LYRIC", "LUNAR", "LOUSY", "LEDGE", "LOGIN", "LEAKY", "LOOPY",
                "MIGHT", "MONEY", "MAJOR", "MARCH", "MONTH", "MEDIA", "MODEL", "MUSIC", "MATCH", "MAYBE", "MEANT", "MIXED", "METAL", "MOTOR", "MINOR", "MOUTH", "MOVIE", "MAGIC", "MOUNT", "MOUSE", "MINUS", "MAKER", "MERIT", "MEDAL", "METER", "MERGE", "MIDST", "MARSH", "MANOR", "MUMMY", "MAPLE", "MOIST", "MERRY", "MOTTO", "MUDDY", "MESSY", "MIMIC", "MUTED", "MIXER", "MOVER", "MOTEL", "MURKY", "MAGMA", "MISTY", "MANGO", "MELON", "MOOSE", "MORPH", "MEDIC",
                "NEVER", "NEEDS", "NORTH", "NIGHT", "NOTED", "NOVEL", "NOISE", "NURSE", "NINTH", "NOBLE", "NERVE", "NOISY", "NEEDY", "NUDGE", "NIFTY", "NINJA", "NACHO", "NAILS", "NEIGH",
                "OTHER", "OFTEN", "ORDER", "OFFER", "OCCUR", "OCEAN", "OUTER", "OPERA", "OLIVE", "ORBIT", "OUNCE", "ONION", "OASIS", "OTTER",
                "PLACE", "POINT", "POWER", "PRESS", "PARTY", "PRICE", "PAPER", "PHONE", "PLANT", "PRIME", "PRIOR", "PIECE", "PHASE", "PROVE", "PEACE", "PROUD", "PRINT", "PANEL", "PHOTO", "POUND", "PILOT", "PLATE", "PRIZE", "PRIDE", "PLAIN", "PAINT", "PITCH", "PLANE", "PIANO", "PATCH", "PANIC", "PAUSE", "PEARL", "PLAZA", "PIZZA", "PINCH", "PASTE", "POLAR", "PATIO", "PILES", "PEACH", "PORCH", "PIXEL", "POKER", "PERIL", "PUPPY", "PEDAL", "PIVOT", "PRISM", "PLANK", "PANDA",
                "QUITE", "QUICK", "QUIET", "QUEEN", "QUOTE", "QUEST", "QUERY", "QUEUE", "QUILT", "QUIRK", "QUAIL", "QUILL", "QUART", "QUARK", "QUACK",
                "RIGHT", "RANGE", "ROUND", "REACH", "READY", "RADIO", "ROYAL", "RAPID", "RAISE", "RIVER", "ROUTE", "RATIO", "ROUGH", "RIVAL", "REPLY", "RALLY", "REACT", "ROCKY", "RIGID", "RELAX", "REALM", "RADAR", "RELAY", "RISKY", "RENEW", "RANCH", "ROBOT", "RUSTY", "ROAST", "RUMOR", "ROGUE", "RAINY", "RAMPS", "RINSE", "REUSE", "RAVEN", "RECAP", "RHYME", "RHINO", "RELIC", "ROOMY", "REMIX",
                "STILL", "STATE", "SINCE", "SMALL", "STAFF", "SHARE", "SOUTH", "SHORT", "STOCK", "STUDY", "SPACE", "STORY", "STAGE", "SPEED", "SOUND", "SHOWN", "SPENT", "SPEND", "SERVE", "SPEAK", "SCALE", "STYLE", "STAND", "SHALL", "STORE", "SOILD", "SHEET", "STOOD", "SHAPE", "SUITE", "SCENE", "STONE", "STUFF", "SHIFT", "SCORE", "SPLIT", "STEEL", "SCOPE", "SPOKE", "SPORT", "SLEEP", "SMART", "SIGHT", "SIXTH", "SKILL", "STICK", "SMILE", "SOLVE", "SHOCK", "SWEET", "SUPER", "SUGAR", "STORM", "STUCK", "SHELF", "SHELL", "SPARE", "SHIRT", "STEAM", "SLIDE", "SWING", "SHORE", "SWEPT", "SOLAR", "SPELL", "SHAKE", "SHEEP", "SWIFT", "STAMP", "SPRAY", "SAUCE", "STACK",
                "THERE", "THEIR", "THESE", "THOSE", "TODAY", "THINK", "THIRD", "TOTAL", "TRADE", "THING", "TABLE", "TRACK", "TRIED", "TWICE", "TRAIN", "TRULY", "TRUTH", "TREND", "TRICK", "TOUGH", "TOWER", "THROW", "TEACH", "TASTE", "THICK", "TOPIC", "TIRED", "THREW", "TRUCK", "TRACE", "TRAIL", "TENTH", "TWIST", "TIGER", "THUMB", "TENSE", "TOKEN", "TOAST", "TOWEL", "TORCH", "TRASH", "TASTY", "TRAIT", "TIMER", "THORN",
                "UNDER", "UNTIL", "URBAN", "UPPER", "USUAL", "USAGE", "UPSET", "UNITY", "ULTRA", "UNITE", "UNLIT", "UDDER", "UNZIP",
                "VISIT", "VALUE", "VOICE", "VIDEO", "VITAL", "VALID", "VAGUE", "VIVID", "VOCAL", "VALVE", "VAPOR", "VAULT", "VIGOR", "VOWEL",
                "WHICH", "WOULD", "WHERE", "WORLD", "WHILE", "WATER", "WHOLE", "WHITE", "WORTH", "WRITE", "WRONG", "WATCH", "WROTE", "WASTE", "WORSE", "WORST", "WHEEL", "WIDTH", "WHEAT", "WIRES", "WIRED", "WRIST", "WEIRD", "WEIGH", "WAIST", "WAGON", "WIDEN", "WRECK", "WHALE", "WINDY", "WHISK", "WALTZ",
                "YOUNG", "YOUTH", "YIELD", "YACHT", "YEAST", "YODEL", "YELLS",
                "ZEBRA"
            },
            //6
            new List<string>()
            {
                "ALUMNI", "AROUND", "ACROSS", "ALWAYS", "ACCESS", "ALMOST", "ACTION", "ACTUAL", "ANNUAL", "AMOUNT", "ANYONE", "ACTIVE", "ANSWER", "AGENCY", "APPEAR", "AFFECT", "ACCEPT", "ADVOCE", "APPEAL", "ATTACK", "AUTHOR", "ANIMAL", "ACTING", "ASSUME", "ASSIST", "ATTEND", "ANYWAY", "ASPECT", "AFFORD", "ARTIST", "ALPACA", "AFRAID", "AGENDA", "ARRIVE", "ADVISE", "ALLIED", "ABSENT", "ADJUST", "AUTUMN", "ACCENT", "ABSORB", "ASLEEP", "ANCHOR", "ATOMIC", "ATTACH", "ATTAIN", "ASSERT", "ABSURD", "ASSIGN", "ADMIRE", "ARCADE", "ARCHER", "ABRUPT", "AFFIRM", "ASHORE", "ACCUSE", "ANALOG", "ALMOND", "APATHY", "ASCEND",
                "BEFORE", "BETTER", "BECOME", "BEHIND", "BECAME", "BEYOND", "BUDGET", "BOTTOM", "BRANCH", "BOUGHT", "BATTLE", "BRIDGE", "BROKEN", "BANDIT", "BACKED", "BRIGHT", "BEHALF", "BEAUTY", "BAYOUS", "BORDER", "BREATH", "BOTTLE", "BELONG", "BUTTON", "BARELY", "BESIDE", "BREACH", "BITTER", "BOTHER", "BUTTER", "BAOBAB", "BUTLER", "BASKET", "BALLET", "BRONZE", "BARREL", "BORROW", "BEHAVE", "BUNDLE", "BANNER", "BANKER", "BOXING", "BREEZE", "BUBBLE", "BINARY", "BUCKET", "BOUNCE", "BROWSE", "BUFFET", "BANANA", "BOILER", "BEACON", "BEWARE", "BAKERY", "BOILED", "BUMPER", "BINDER", "BEAVER", "BADGER", "BAMBOO",
                "CHANGE", "COMMON", "COURSE", "COMING", "CREATE", "CHOICE", "CREDIT", "CHARGE", "CHANCE", "CLIENT", "CLOSED", "COUPLE", "CENTER", "CHOOSE", "CHOSEN", "CAUGHT", "COWBOY", "CORNER", "CLOSER", "COFFEE", "CUSTOM", "CIRCLE", "CAMERA", "COLUMN", "COPPER", "CASTLE", "COMPLY", "CARBON", "COSTLY", "CASUAL", "CARING", "COMEDY", "COTTON", "COMMIT", "CARPET", "CATTLE", "CLEVER", "CRUISE", "CONVEY", "COLLAR", "CANYON", "CHERRY", "COUPON", "CANVAS", "CEMENT", "CHORUS", "CANNON", "CALLER", "CIRCUS", "CANDLE", "COOLER", "COOLED", "CRUNCH", "CEREAL", "CLOSET", "CELLAR", "COSMIC", "CATBOY",
                "DESIGN", "DEMAND", "DIRECT", "DEGREE", "DOUBLE", "DAMAGE", "DEVICE", "DETAIL", "DOCTOR", "DECIDE", "DESIRE", "DEPEND", "DANGER", "DEFINE", "DEVILS", "DEALER", "DEFEAT", "DESERT", "DEFEND", "DETECT", "DECENT", "DIVINE", "DENIAL", "DRAGON", "DONATE", "DRAWER", "DELETE", "DEPART", "DOMINO", "DONKEY", "DELUXE", "DIALOG", "DECEIT", "DEFUSE", "DEDUCE", "DEDUCT", "DEBRIS", "DIVERT", "DEMISE", "DOMAIN", "DEBATE", "DECADE", "DIFFER", "DIGEST", "DEVOTE", "DEVISE", "DISMAY",
                "EITHER", "ENOUGH", "EFFECT", "EXPECT", "ENERGY", "EASILY", "EXCEPT", "ENABLE", "EFFORT", "ENGINE", "EDITOR", "EXPAND", "EXPERT", "EXTEND", "ENDING", "EATING", "ESCAPE", "EXPORT", "EMPIRE", "ENGAGE", "ENTITY", "EXCUSE", "EXEMPT", "EXOTIC", "EVOLVE", "EXPOSE", "EXPIRE", "ESTEEM", "ENDURE", "ELDEST", "EMBARK", "ENCORE", "EDIBLE", "EMBLEM", "ENIGMA", "EXPEND", "EUREKA", "ERRAND", "ELIXIR", "EXHALE", "ENDEAR", "EQUATE", "EMBRYO", "ENZYME", "ENTIRE", "ESTATE",
                "FUTURE", "FAMILY", "FORMER", "FOURTH", "FIGURE", "FOLLOW", "FRIEND", "FACTOR", "FORCED", "FORMAL", "FOREST", "FAMOUS", "FACING", "FLIGHT", "FAIRLY", "FELLOW", "FINISH", "FORMAT", "FORGET", "FLYING", "FALLEN", "FOUGHT", "FINGER", "FABRIC", "FROZEN", "FILTER", "FARMER", "FLOWER", "FISHER", "FUSION", "FLAVOR", "FIERCE", "FREEZE", "FORGOT", "FOSSIL", "FINITE", "FINALE", "FADING", "FAULTY", "FOLDER", "FACADE", "FRENZY", "FALCON", "FRIDGE", "FUNGUS", "FORBID", "FIASCO", "FIDDLE", "FLUFFY", "FERRET", "FAUCET",
                "GROWTH", "GLOBAL", "GROUND", "GARDEN", "GOLDEN", "GATHER", "GLANCE", "GARAGE", "GENTLE", "GUITAR", "GENIUS", "GAMBLE", "GALAXY", "GRAVEL", "GAMING", "GALLON", "GARLIC", "GRADES", "GIFTED", "GOTTEN", "GINGER", "GROOVE", "GREASE", "GLOOMY", "GREEDY", "GRASSY", "GREASY", "GUTTER", "GOALIE", "GLIDER", "GIGGLE", "GALLOP", "GRUDGE", "GADGET", "GRUMPY", "GOBLIN", "GOBLET", "GLITCH", "GEYSER", "GAZEBO", "GROOVY", "GALORE", "GRIEVE", "GRANNY", "GOVERN", "GUILTY", "GENDER", "GOPHER",
                "HEALTH", "HAPPEN", "HANDLE", "HARDLY", "HARDER", "HIDDEN", "HEIGHT", "HONEST", "HUNGRY", "HEAVEN", "HORROR", "HUNTER", "HARBOR", "HYBRID", "HEATED", "HEATER", "HAMMER", "HAZARD", "HUNGER", "HOCKEY", "HOLLOW", "HUMBLE", "HOOKED", "HEROIC", "HELMET", "HASSLE", "HURDLE", "HOURLY", "HUMANE", "HINDER", "HOPPER", "HERBAL", "HALVES", "HELPER", "HELPED", "HANGAR", "HUMMER", "HARDEN", "HAMPER", "HELIUM", "HIATUS", "HERESY", "HUSTLE", "HORRID", "HOMELY", "HEALER", "HOOVES", "HICCUP", "HIJACK",
                "INCOME", "IMPACT", "INSIDE", "INDEED", "ISLAND", "INTEND", "INTENT", "INVEST", "IMPORT", "IGNORE", "INFORM", "IMMUNE", "INVITE", "INSIST", "INTACT", "INDOOR", "INSERT", "IRONIC", "INSURE", "INSECT", "INSULT", "INWARD", "INVENT", "INSANE", "INJECT", "INVADE", "INFECT", "IMPAIR", "IMPEDE", "IGNITE", "INJURE", "INJURY", "INDIGO", "INHALE", "INVERT", "IMPURE", "INFAMY", "INDENT", "ICEBOX", "ICICLE", "INFEST", "INDUCT", "INFUSE", "IMPART", "INDUCE", "IMPOSE", "ITSELF", "INFANT", "INVOKE",
                "JUNIOR", "JERSEY", "JACKET", "JUNGLE", "JUMPER", "JUMPED", "JARGON", "JAGUAR", "JOYFUL", "JUMBLE", "JOYOUS", "JIGSAW", "JUGGLE", "JINGLE", "JESTER", "JUICED", "JUICER", "JAILER", "JAILED", "JAILOR", "JIGGLE", "JETWAY", "JETLAG", "JOCKEY", "JUNKER", "JASPER", "JAUNTY", "JOINED", "JOVIAL", "JINGLY", "JIVING", "JINXED", "JINXES", "JAMMED", "JAMMER", "JANGLY", "JEWELS", "JOKERS", "JOKILY", "JOKING", "JOULES", "JOGGER", "JUDGER", "JUKING", "JURIES", "JURORS", "JUSTLY", "JUSTLE", "JUICES", "JACKED", "JACKER",
                "KNIGHT", "KIDNEY", "KEEPER", "KINDLY", "KETTLE", "KARATE", "KITTEN", "KICKER", "KICKED", "KEYPAD", "KINDLE", "KINGLY", "KAZOOS", "KELVIN", "KERNEL", "KENNEL", "KEENED", "KEENLY", "KEELED", "KEBOBS", "KNOCKS", "KRAKEN",
                "LITTLE", "LEADER", "LIKELY", "LIVING", "LATEST", "LETTER", "LEAGUE", "LISTEN", "LAUNCH", "LENGTH", "LEAVES", "LINKED", "LOSING", "LIGHTS", "LIQUID", "LEGACY", "LUXURY", "LAWYER", "LESSON", "LOVELY", "LESSER", "LOADED", "LINEAR", "LANDED", "LOCATE", "LAYOUT", "LOVING", "LEGEND", "LIVELY", "LOUNGE", "LONELY", "LATELY", "LADDER", "LEGION", "LOCKER", "LAPTOP", "LAWFUL", "LINGER", "LUMBER", "LOSSEN", "LAGOON", "LIZARD", "LOTION", "LOCALE", "LIVERY", "LOATHE", "LOADER", "LOCUST",
                "MANIAC", "MARKET", "MAKING", "MEMBER", "MATTER", "MIDDLE", "MOVING", "MANAGE", "MOMENT", "MODERN", "METHOD", "MINUTE", "MEMORY", "MASTER", "MANNER", "MYSELF", "MEDIUM", "MUSKET", "MAINLY", "MOTION", "MOBILE", "MARKED", "MUSEUM", "MOSTLY", "MUTUAL", "MARGIN", "MODULE", "MINING", "MANUAL", "MODEST", "MIRROR", "MATURE", "MUSCLE", "MATRIX", "MEDIAN", "MODIFY", "MORALE", "MARBLE", "MOTIVE", "MARKER", "METRIC", "MENTOR", "MAGNET", "MELODY", "MONKEY", "MEADOW", "MYSTIC", "MAYHEM", "MAKEUP", "MANTLE", "MAILED", "MAILER", "MOLTEN", "MEMOIR", "MIRAGE", "MUTANT", "MISLED", "MISUSE",
                "NUMBER", "NEARLY", "NATURE", "NATION", "NORMAL", "NOTICE", "NATIVE", "NOBODY", "NARROW", "NEARBY", "NIGHTS", "NEEDLE", "NOTIFY", "NOVICE", "NICKEL", "NOZZLE", "NIMBLE", "NAPKIN", "NEGATE", "NECTAR", "NUGGET", "NODDLE", "NIBBLE", "NOTATE", "NEATLY", "NICEST", "NINJAS", "NOBLES", "NOSIER", "NOSILY", "NOVELS", "NUDGER", "NUDGES", "NURSED", "NUANCE",
                "OFFICE", "OPTION", "OBTAIN", "OUTPUT", "ONLINE", "OBJECT", "ORANGE", "OFFSET", "ORIGIN", "OXYGEN", "OCCUPY", "OPPOSE", "OUTLET", "OUTFIT", "ORDEAL", "ONWARD", "OYSTER", "OUTLAW", "OUTAGE", "OBTUSE", "OUTWIT", "OCELOT", "OBEYED", "OCCURS", "OCTAVE", "OCTANE", "OCULAR", "OFFERS", "OLIVES", "OLDEST", "OMELET", "ONIONS", "OPENLY", "OUNCES", "OVERDO", "OVERLY", "OWNING",
                "PEOPLE", "PUBLIC", "PERIOD", "PLEASE", "POLICY", "PERSON", "POLICE", "PROFIT", "PLAYER", "PRETTY", "PARENT", "PROPER", "PICKED", "PLENTY", "PROVEN", "PURSUE", "PARTLY", "PREFER", "PRINCE", "POCKET", "PACKED", "PALACE", "PHRASE", "PLANET", "PACKET", "POETRY", "PORTAL", "POWDER", "POLISH", "PLASMA", "PROMPT", "PARADE", "PURPLE", "PEPPER", "POSTER", "PENCIL", "POTATO", "PURITY", "PUZZLE", "POLITE", "PICKUP", "POETIC", "PICNIC", "PARDON", "PLAQUE", "PILLOW", "PILLAR", "PASTRY", "PIGEON", "PEANUT",
                "QUARTZ", "QUARRY", "QUAINT", "QUIVER", "QUENCH", "QUEASY", "QUICHE", "QUOTES", "QUOTER", "QUALMS", "QUAILS", "QUAKES", "QUAKED", "QUARKS", "QUACKS", "QUEENS", "QUEUES", "QUEUED", "QUIRKS", "QUIRKY", "QUILLS",
                "REPORT", "RESULT", "REALLY", "RECENT", "RECORD", "RETURN", "RATHER", "REASON", "REVIEW", "REFORM", "REDUCE", "REMAIN", "REGION", "RAISED", "RELIEF", "RISING", "REMOTE", "RETAIN", "REGARD", "REMOVE", "RATING", "RELATE", "REPAIR", "RARELY", "RULING", "RESORT", "REPEAT", "ROBUST", "REVEAL", "REPLAY", "RECALL", "RANDOM", "REWARD", "RIDING", "RESCUE", "RUBBER", "REVISE", "REFUSE", "RESIST", "RETIRE", "RENTAL", "REMIND", "REJECT", "RHYTHM", "REMEDY", "RUNNER", "RECIPE", "RITUAL", "RIBBON", "ROCKET", "RABBIT", "RESIGN", "REMARK", "RADIUS", "REFUGE", "REFUND", "REPAID", "RIPPED", "ROSTER", "ROTARY", "REDEEM", "REVIVE", "RIDDEN", "RUNWAY", "REVOLT", "REFINE", "ROTTEN", "RECKON", "REPEAL", "RELISH", "ROTATE", "REVERT", "REFLEX", "RUBBLE", "REOPEN",
                "SHOULD", "SYSTEM", "SECOND", "SCHOOL", "STRONG", "SIZZLE", "SINGLE", "SOCIAL", "SERIES", "STREET", "SENIOR", "SIMPLY", "SOURCE", "SUPPLY", "SIMPLE", "SEASON", "SUMMER", "SAYING", "SAFETY", "SECTOR", "STATUS", "SIGNED", "SQUARE", "SECURE", "SURVEY", "SEARCH", "SPRING", "SCREEN", "STUDIO", "SPREAD", "SELECT", "SPEECH", "SYMBOL", "SPIRIT", "STABLE", "SOUGHT", "SAMPLE", "SCHEME", "SILVER", "SIGNAL", "STRIKE", "SEVERE", "SECRET", "SWITCH", "SAVING", "STEADY", "STRUCK", "STREAM", "SMOOTH", "SURELY", "SOLELY", "SUMMIT", "SUDDEN", "SLIGHT", "SPOKEN", "SILENT", "SETTLE", "STRICT", "SUBMIT", "STRING", "STOLEN", "SHADOW", "SINGER", "SOCCER", "SUPERB", "SERIAL", "SUBTLE", "SOONER", "STATIC", "SHIELD", "STANCE", "SCRIPT", "SACRED", "SIERRA", "SELDOM", "SALMON", "SHOWER", "SPHERE", "SPRINT", "SUNSET", "STRIVE", "STEREO", "SCARCE",
                "THOUGH", "TAKING", "TRYING", "TARGET", "TRAVEL", "THEORY", "TETRIS", "THANKS", "TOWARD", "TIMING", "TALENT", "TAUGHT", "TEAPOT", "TICKET", "TISSUE", "TENNIS", "TIMELY", "TENDER", "THROWN", "TACKLE", "TURKEY", "TRIPLE", "TEMPLE", "THROAT", "TIMBER", "TUNNEL", "TONGUE", "TRAGIC", "TROPHY", "TITLED", "THESIS", "TOILET", "THEIRS", "TAILOR", "THREAD", "THRIVE", "TOMATO", "THRILL", "TRICKY", "THRONE", "TACTIC", "TAXING", "TRENDY", "THIRST", "TUMBLE", "TURTLE", "TRIVIA", "TANGLE", "THWART", "TYCOON", "TESTER", "TRIPOD", "TINKER", "TUXEDO",
                "UNITED", "UNIQUE", "UNLESS", "USEFUL", "UNABLE", "UPDATE", "UNLIKE", "URGENT", "UNFAIR", "UPWARD", "UPTIME", "UNPAID", "UPLOAD", "UNUSED", "UPHELD", "UNREST", "UNEVEN", "UNLOCK", "UNSURE", "UTMOST", "UNEASY", "USABLE", "UNSAFE", "UNSEEN", "UPTAKE", "UPHOLD", "UNTRUE", "UNVEIL", "UNJUST", "UNISON", "UMPIRE", "UNFOLD", "UPSIDE", "UNREAL", "UNWISE", "UNLOAD", "UTOPIA", "UPROAR", "UNRULY", "UNWIND", "URCHIN", "UNWELL", "UPROOT", "UNWRAP",
                "VALLEY", "VOLUME", "VISION", "VISUAL", "VENDOR", "VERSUS", "VICTIM", "VARIED", "VIABLE", "VIRTUE", "VESSEL", "VERBAL", "VACUUM", "VACANT", "VIEWER", "VECTOR", "VERIFY", "VELVET", "VOYAGE", "VANITY", "VIOLIN", "VIOLET", "VANISH", "VEILED", "VORTEX", "VERSED", "VOLLEY", "VIGOUR", "VOODOO", "VERTEX", "VACATE", "VERMIN", "VAULTS", "VARIES", "VASTLY", "VALUED", "VALUES", "VALVES", "VEGGIE", "VEXING", "VIKING", "VIEWED",
                "WYVERN", "WITHIN", "WEIGHT", "WINDOW", "WINTER", "WEALTH", "WINNER", "WONDER", "WEEKLY", "WORKER", "WOODEN", "WISDOM", "WORTHY", "WARMTH", "WIRING", "WIZARD", "WALNUT", "WALLET", "WEAKEN", "WANDER", "WOLVES", "WAITER", "WEAKLY", "WORSEN", "WASHER", "WRENCH", "WREATH", "WITHER", "WAFFLE", "WEASEL", "WETTER", "WOBBLE", "WIGGLE", "WHIMSY", "WIDGET", "WELDER", "WOEFUL", "WADDLE", "WHEEZE", "WALRUS", "WEBBED", "WALKER", "WALKED", "WHEELS", "WORKED", "WRITES",
                "YELLOW", "YEARLY", "YOGURT", "YONDER", "YACHTS",
                "ZODIAC", "ZOMBIE", "ZIPPER", "ZIGZAG", "ZEALOT", "ZINGER", "ZAPPED", "ZAPPER", "ZIGGED", "ZAGGED", "ZOOMED", "ZEBRAS", "ZEROES"
            },
            //7
            new List<string>()
            {
                "ANOTHER", "AGAINST", "ALREADY", "ABILITY", "AVERAGE", "ACCOUNT", "ADDRESS", "ACHIEVE", "APPLIED", "ATTEMPT", "ARTICLE", "ADVANCE", "ACQUIRE", "ABSENCE", "ATTRACT", "ANYBODY", "ANCIENT", "ANALYST", "ARRIVAL", "ACADEMY", "ADVISER", "AUCTION", "ANXIETY", "ARRANGE", "ANXIOUS", "APPROVE", "ARCHIVE", "AMATEUR", "APPOINT", "AWKWARD", "ANALYZE", "AUDITOR", "ANYMORE", "ALRIGHT", "ATHLETE", "ANTIQUE", "ANALOGY", "ANYTIME", "AWESOME", "ARTWORK", "AMUSING", "AMNESTY", "ANATOMY", "APOLOGY", "AQUATIC", "AGILITY", "APPLAUD", "ALLERGY", "AUDIBLE", "ABOLISH", "AMBIENT", "ANTENNA", "ADAPTER", "ABDOMEN", "AEROBIC", "ASPHALT", "ALGEBRA",
                "BETWEEN", "BECAUSE", "BELIEVE", "BENEFIT", "BROUGHT", "BILLION", "BALANCE", "BANKING", "BENEATH", "BEDROOM", "BINDING", "BATTERY", "BARRIER", "BIOLOGY", "BUILDER", "BARGAIN", "BIDDING", "BROADEN", "BELOVED", "BLANKET", "BIZARRE", "BICYCLE", "BUFFALO", "BOWLING", "BALLOON", "BRIGADE", "BOULDER", "BANQUET", "BOILING", "BAGGAGE", "BONDING", "BRACKET", "BALCONY", "BRUSHED", "BOYCOTT", "BLASTED", "BLATANT", "BANANAS", "BLOSSOM", "BRITTLE", "BUOYANT", "BISCUIT", "BRAVERY", "BURGLAR", "BROWNIE", "BOLOGNA",
                "COMPANY", "CONTROL", "CERTAIN", "CURRENT", "COUNTRY", "CONTACT", "CAPITAL", "CENTRAL", "COUNCIL", "CENTURY", "COMPLEX", "COLLEGE", "CONTENT", "CONCERN", "CHAPTER", "CHANNEL", "CONTAIN", "CULTURE", "CALLING", "CONCEPT", "CONTEXT", "CONDUCT", "CLASSES", "CORRECT", "CAPABLE", "CUTTING", "CLOSING", "COMMENT", "CRUCIAL", "CLASSIC", "COMMAND", "CIRCUIT", "CAREFUL", "COMPETE", "COUNTER", "CLOTHES", "COMFORT", "CARRIER", "COMBINE", "CAPTURE", "COLLECT", "CLIMATE", "COMPARE", "CAPTAIN", "CHAMBER", "CONFIRM", "CABINET", "CHARITY", "COMPACT", "CAPTION", "CONNECT", "CRYSTAL", "CONCERT", "CONVERT", "CONSIST", "CLOSURE", "CALIBER", "CHICKEN", "CAUTION", "CHECKED", "CEILING", "COURAGE", "CITIZEN", "CONSULT", "CURIOUS", "CLARITY", "CROWDED", "CLUSTER", "CREATOR", "COTTAGE", "CLARIFY", "CLEANER", "CALCIUM", "CONSOLE", "CRUSHED", "CURTAIN", "CRICKET", "CONSUME", "CARTOON", "COSTUME",
                "DEVELOP", "DESPITE", "DISCUSS", "DRIVING", "DELIVER", "DIGITAL", "DISPLAY", "DECLINE", "DEALING", "DRAWING", "DYNAMIC", "DESKTOP", "DEFICIT", "DEPOSIT", "DISPUTE", "DENSITY", "DEFENCE", "DISTANT", "DIAMOND", "DEFAULT", "DESTROY", "DEFENSE", "DESERVE", "DELIGHT", "DIGNITY", "DILEMMA", "DECLARE", "DISMISS", "DESTINY", "DESCENT", "DURABLE", "DIAGRAM", "DISPOSE", "DICTATE", "DIPLOMA", "DOLPHIN", "DISLIKE", "DISTURB", "DIFFUSE", "DRUMMER", "DESCEND", "DECENCY", "DISCARD", "DISTORT", "DECIMAL", "DASHING", "DECEIVE", "DECODER", "DISCORD", "DISABLE",
                "EXAMPLE", "ECONOMY", "EXACTLY", "EVENING", "EXPENSE", "EXPRESS", "EXPLAIN", "EXCITED", "ENHANCE", "ELEMENT", "EDITION", "EXAMINE", "EXTREME", "EXPLORE", "ELDERLY", "EVIDENT", "EXHIBIT", "EXCLUDE", "ESSENCE", "ELEGANT", "EPISODE", "EMBRACE", "EXTRACT", "EMOTION", "EROSION", "EDUCATE", "EMPEROR", "EMINENT", "ETERNAL", "ELUSIVE", "EXHAUST", "ECOLOGY", "ECLIPSE", "ELASTIC", "EMULATE", "EXPLODE", "EMERALD", "EMPATHY", "EXTINCT", "EMBARGO", "ENLARGE", "ELEVATE", "EVASION", "ENCRYPT", "EQUATOR", "EPITOME", "EXCERPT", "ENVIOUS", "EVASIVE", "ENTROPY",
                "FURTHER", "FORWARD", "FOREIGN", "FINANCE", "FEATURE", "FEELING", "FINDING", "FREEDOM", "FORTUNE", "FASHION", "FOUNDER", "FACTORY", "FORMULA", "FISHING", "FILLING", "FITNESS", "FOREVER", "FICTION", "FANTASY", "FITTING", "FRAGILE", "FACTUAL", "FATIGUE", "FORGIVE", "FOOTAGE", "FACTION", "FEATHER", "FESTIVE", "FURNACE", "FURNISH", "FLICKER", "FANFARE", "FLATTEN",
                "GENERAL", "GALLERY", "GENUINE", "GRAPHIC", "GRAVITY", "GESTURE", "GENERIC", "GRADUAL", "GLIMPSE", "GROCERY", "GEOLOGY", "GRANITE", "GARMENT", "GRIFFIN", "GARBAGE", "GOURMET", "GLITTER", "GLACIAL", "GARNISH", "GORILLA", "GIMMICK", "GRUMBLE", "GRIZZLY", "GONDOLA", "GRIMACE", "GAZELLE", "GIRAFFE", "GELATIN", "GYMNAST",
                "HOWEVER", "HISTORY", "HIDEOUT", "HOLDING", "HELPING", "HUNDRED", "HOLIDAY", "HEALTHY", "HEARING", "HEAVILY", "HELPFUL", "HIGHWAY", "HORIZON", "HARVEST", "HARMONY", "HOPEFUL", "HALFWAY", "HARNESS", "HYGIENE", "HONESTY", "HALLWAY", "HAMSTER", "HAMMOCK", "HEXAGON",
                "INCLUDE", "IMPROVE", "INVOLVE", "INITIAL", "INSTEAD", "IMAGINE", "INTENSE", "INSTALL", "IDEALLY", "IMMENSE", "IMAGERY", "INSPIRE", "IMPULSE", "INSPECT", "ISOLATE", "INHIBIT", "INVALID", "IMPRESS", "INDULGE", "INVERSE", "IMPLANT", "INERTIA", "IMITATE", "INTEGER", "INFERNO", "INFLATE", "IMMERSE",
                "JUSTICE", "JOURNAL", "JOURNEY", "JUSTIFY", "JEALOUS", "JACKPOT", "JEWELRY", "JUKEBOX", "JANITOR", "JUGGLER", "JUGGLES", "JUMBLED", "JOGGING", "JUICING", "JUMPING",
                "KINGDOM", "KITCHEN", "KEYWORD", "KEYNOTE", "KINETIC", "KARAOKE", "KETCHUP", "KNUCKLE", "KEYHOLE", "KNEECAP", "KEYCARD", "KNEEPAD", "KEYPADS", "KINSHIP", "KINDRED",
                "LEADING", "LIMITED", "LIBRARY", "LARGELY", "LEARNED", "LEISURE", "LOYALTY", "LANDING", "LIBERTY", "LEATHER", "LENGTHY", "LECTURE", "LIGHTLY", "LIGHTER", "LOADING", "LAUNDRY", "LUGGAGE", "LOCKING", "LUCKILY", "LETTUCE", "LATENCY", "LOBSTER", "LOOKOUT", "LAGGING", "LANTERN", "LIGHTEN", "LIKABLE", "LENIENT", "LOCATOR", "LOCATES",
                "MILLION", "MANAGER", "MEETING", "MEDICAL", "MEANING", "MORNING", "MEASURE", "MESSAGE", "MACHINE", "MISSION", "MAXIMUM", "MINIMUM", "MONITOR", "MONTHLY", "MASSIVE", "MISSING", "MENTION", "MUSICAL", "MISTAKE", "MINIMAL", "MIXTURE", "MYSTERY", "MINERAL", "MODULAR", "MOLDING", "MARKING", "MAPPING", "MONSTER", "MANDATE", "MIRACLE", "MAGICAL", "MIGRATE", "MASSAGE", "MANSION", "MASTERY", "MILEAGE", "MUSTARD", "MAMMOTH", "MODULUS", "MODESTY", "MELODIC", "MAILBOX", "MOVABLE", "MANATEE", "MUSTANG", "MIDTERM", "MONTAGE", "MERMAID",
                "NETWORK", "NOTHING", "NATURAL", "NEITHER", "NUCLEAR", "NURSING", "NERVOUS", "NOTABLE", "NEUTRAL", "NURSERY", "NOVELTY", "NOTEPAD",
                "OFFICER", "OUTSIDE", "OVERALL", "OPENING", "OPERATE", "OPINION", "OBVIOUS", "OUTCOME", "OUTLOOK", "ONGOING", "ORGANIC", "OUTDOOR", "OPTIMAL", "OUTLINE", "OBSERVE", "OFFLINE", "OBSCURE", "OVERLAP", "OUTWARD", "ORCHARD", "OVERDUE", "ODYSSEY", "OVERLAY", "OUTPAST", "OCTOPUS", "OUTCAST", "OATMEAL", "OSTRICH", "OFFBEAT", "OCTAGON", "OVERUSE", "OUTLAST", "OUTLIER", "ORIGAMI",
                "PROVIDE", "PROCESS", "PRIVATE", "PRODUCT", "PROBLEM", "PROJECT", "PRESENT", "PERHAPS", "PROGRAM", "PRIMARY", "POPULAR", "PRODUCE", "PARTNER", "PERCENT", "PURPOSE", "PICTURE", "PATIENT", "PAYMENT", "PACKAGE", "PROTECT", "PREVENT", "PERFECT", "PATTERN", "PERFORM", "PROMOTE", "PROFILE", "PROMISE", "PLASTIC", "PORTION", "PREMIUM", "PREPARE", "PENDING", "PREDICT", "PASSAGE", "PRECISE", "PROTEIN", "PARKING", "PASSION", "PUSHING", "PROCEED", "PENALTY", "PIONEER", "PARTIAL", "PICKING", "PAINTED", "PRINTER", "PRIVACY", "PUBLISH", "PHOENIX", "PASSIVE", "PHYSICS", "PURSUIT", "PAINTER", "PACKING", "PREVIEW", "PREMISE", "PRETEND", "POSTURE", "PERSIST", "PREVAIL", "PATHWAY", "PARADOX", "PYRAMID", "PENGUIN", "PROSPER", "POULTRY", "POTTERY", "PITCHER", "PROVOKE", "PORTRAY", "PUDDING",
                "QUALITY", "QUARTER", "QUALIFY", "QUINTET", "QUANTUM", "QUIVERS", "QUERIES", "QUIETLY", "QUIETER", "QUICKLY", "QUICKER",
                "RELEASE", "RELATED", "RUNNING", "RECEIVE", "REQUIRE", "REFLECT", "RESPECT", "REGULAR", "READING", "REQUEST", "REALITY", "RESPOND", "REMOVED", "REMOVES", "REPLACE", "REALIZE", "RESERVE", "ROUTINE", "REVERSE", "RECOVER", "RESOLVE", "RAILWAY", "REMOVAL", "RESTORE", "RECEIPT", "RENEWAL", "RELAXED", "RANKING", "REFUSAL", "ROYALTY", "REFINED", "RAINBOW", "RIGHTLY", "REVIVAL", "RELIEVE", "RESTING", "REBUILD", "REFEREE", "REUNION", "REFRAIN", "RESIDUE", "REPLICA", "RELIANT", "ROCKING", "RAMPANT", "RECYCLE", "REWRITE", "REFRESH", "RIPPING", "RECITAL", "REVOLVE",
                "SEVENTH", "SERVICE", "SUPPORT", "SEVERAL", "SUBJECT", "SPECIAL", "SECTION", "SUCCESS", "SOCIETY", "SOMEONE", "SCIENCE", "SERIOUS", "STATION", "SETTING", "STUDENT", "SURFACE", "SUGGEST", "SHOWING", "STORAGE", "SPEAKER", "SESSION", "SITTING", "SUMMARY", "SPECIES", "SHORTLY", "STUDIED", "SURGERY", "STRANGE", "SEGMENT", "SUCCEED", "SURVIVE", "SUPREME", "SATISFY", "SILENCE", "STRETCH", "SUPPOSE", "SKILLED", "SURPLUS", "SUSTAIN", "STADIUM", "STOMACH", "SHERIFF", "SHELTER", "SHALLOW", "SPECIFY", "SHELVES", "SPOTTED", "STATUTE", "SCRATCH", "SURGEON", "STARTER", "SAILING", "SQUEEZE", "SCHOLAR", "SHUTTLE", "SCANNER", "STYLISH", "SOARING", "SMASHED", "SCENERY", "STANDBY", "SHORTEN",
                "THROUGH", "TRAFFIC", "TROUBLE", "TEACHER", "TURNING", "TYPICAL", "TONIGHT", "TELLING", "TOTALLY", "THEATER", "TENSION", "TRIBUTE", "TOURIST", "THERMAL", "TRIUMPH", "TRAINER", "TERRAIN", "TEXTURE", "TEXTILE", "THUNDER", "TRAILER", "TAPPING", "TURMOIL", "TRACTOR", "TWELFTH", "TRIVIAL", "TEDIOUS", "TRACING", "TIGHTEN", "TURBINE", "THINNER", "TODDLER", "TANGLED", "TRIDENT", "TRILOGY", "TROLLEY", "TRUMPET", "TORNADO", "THIRSTY", "TSUNAMI",
                "UNKNOWN", "UNUSUAL", "UTILITY", "UNIFORM", "UPGRADE", "UNCLEAR", "UNAWARE", "UTILIZE", "URGENCY", "USELESS", "UNCOVER", "UNHEARD", "UNLUCKY", "UNLEASH", "UNICORN", "UNKEMPT", "UNSCREW",
                "VARIOUS", "VARIETY", "VERSION", "VILLAGE", "VENTURE", "VICTORY", "VEHICLE", "VISIBLE", "VIRTUAL", "VISITOR", "VOLTAGE", "VINTAGE", "VITAMIN", "VIBRANT", "VACANCY", "VARIANT", "VINEGAR", "VOLCANO", "VANILLA", "VAMPIRE", "VIBRATE", "VULTURE",
                "WITHOUT", "WORKING", "WEBSITE", "WHETHER", "WRITTEN", "WRITING", "WAITING", "WELCOME", "WEATHER", "WEEKEND", "WALKING", "WARNING", "WEARING", "WITNESS", "WASHING", "WEALTHY", "WARRIOR", "WHISTLE", "WHISPER", "WEEKDAY", "WORKOUT", "WRESTLE", "WEBPAGE", "WRAPPER", "WHISKER", "WHIMPER",
                "YAWNING", "YOUNGER", "YOGURTS", "YELLING",
                "ZEALOUS", "ZOOLOGY", "ZIPLOCK", "ZOMBIES", "ZIPPERS", "ZIPPING"
            },
            //8
            new List<string>()
            {
                "ALTHOUGH", "ANALYSIS", "APPROACH", "ACTUALLY", "ANYTHING", "ACTIVITY", "ADDITION", "ACHIEVED", "ACCEPTED", "ACQUIRED", "AFFECTED", "APPROVAL", "AUDIENCE", "ALLIANCE", "AIRCRAFT", "ANYWHERE", "ACADEMIC", "ACCURATE", "ASSEMBLY", "ARGUMENT", "ADEQUATE", "ATTACHED", "APPARENT", "ACCIDENT", "ACCURACY", "ANNOUNCE", "ABSOLUTE", "ADJUSTED", "ASSUMING", "ABSTRACT", "ADJACENT", "AVIATION", "ARTISTIC", "ADVOCATE", "APPENDIX", "ATHLETIC", "APPETITE", "ANIMATED", "AMBITION", "ABNORMAL", "ABUNDANT", "ASSEMBLE", "ALLOCATE", "ANTELOPE", "ALTITUDE", "AUTOMATE", "AQUARIUM", "APPLAUSE", "ADHESIVE", "ALLERGIC", "AUDITION", "ALPHABET", "ANCESTOR", "ANTIDOTE",
                "BUSINESS", "BUILDING", "BECOMING", "BREAKING", "BIRTHDAY", "BULLETIN", "BATHROOM", "BASEBALL", "BOUNDARY", "BACKBONE", "BRIEFING", "BROCHURE", "BACKWARD", "BASEMENT", "BEVERAGE", "BALLROOM", "BARBECUE", "BOUNCING", "BACKYARD", "BEGINNER", "BLOOMING", "BAREFOOT", "BROCCOLI", "BLIZZARD", "BRACELET", "BACKPACK", "BOOKMARK", "BOOKCASE", "BILLIARD", "BLOWFISH",
                "CHILDREN", "CONTINUE", "COMPLETE", "COMPUTER", "CUSTOMER", "CONTRACT", "CRITICAL", "CONSUMER", "CONSIDER", "CAPACITY", "CAMPAIGN", "CREATION", "CHEMICAL", "CATEGORY", "CONTRAST", "COVERAGE", "COVERING", "CONSTANT", "CREATIVE", "CHAMPION", "CONCRETE", "CEREMONY", "CLOTHING", "CALENDAR", "COMPOSED", "CROSSING", "COLLAPSE", "COMPOUND", "CORRIDOR", "CONTRARY", "CONCLUDE", "CONFUSED", "COLORFUL", "CIRCULAR", "CATCHING", "CONVINCE", "CAUTIOUS", "CREATURE", "COURTESY", "CARRIAGE", "COMPOSER", "CRITIQUE", "CYLINDER", "CREDIBLE", "COSMETIC", "CASSETTE", "CRESCENT", "CRACKING", "CHERRFUL", "CITATION", "CARNIVAL", "CLASSIFY", "COMEDIAN",
                "DIRECTOR", "DECISION", "DIVISION", "DIRECTLY", "DISTRICT", "DELIVERY", "DOCUMENT", "DISTANCE", "DATABASE", "DESCRIBE", "DECREASE", "DISCOVER", "DISTINCT", "DISCOUNT", "DESIGNER", "DURATION", "DOUBTFUL", "DIAMETER", "DEFINITE", "DELICATE", "DECISIVE", "DONATION", "DOWNWARD", "DISAGREE", "DOWNLOAD", "DIMINISH", "DEVOTION", "DISPATCH", "DETECTOR", "DISGUISE", "DISCREET", "DISSOLVE", "DIAGONAL", "DECORATE", "DINOSAUR", "DISTRACT", "DEDICATE",
                "EXCHANGE", "EVIDENCE", "EVERYONE", "EXERCISE", "EMPLOYEE", "EXTERNAL", "EXCITING", "EMPHASIS", "ENTIRELY", "ELECTRIC", "ESTIMATE", "ENORMOUS", "EXPOSURE", "ENGINEER", "EVALUATE", "EVERYDAY", "ELIGIBLE", "ENTRANCE", "EQUATION", "ENVELOPE", "ENDEAVOR", "ELEVATED", "EXTERIOR", "ENSEMBLE", "ELEPHANT", "ELEVENTH", "ELEVATOR", "ETERNITY", "ERUPTION", "EDUCATOR", "EVACUATE", "EXPONENT", "EGGPLANT", "EPILOGUE",
                "FUNCTION", "FINISHED", "FACILITY", "FOOTBALL", "FRIENDLY", "FAMILIAR", "FLEXIBLE", "FIREWALL", "FEATURED", "FREQUENT", "FORECAST", "FESTIVAL", "FEEDBACK", "FLOATING", "FRACTION", "FRONTIER", "FEASIBLE", "FORESTRY", "FOUNTAIN", "FABULOUS", "FLOURISH", "FRAGMENT", "FRICTION", "FOREHEAD", "FLASHING", "FORTRESS", "FAVORITE", "FARMLAND", "FORCEFUL", "FIXATION", "FLAWLESS", "FRIGHTEN", "FEARLESS", "FRAGRANT", "FINALIZE", "FOLLOWER", "FIRMWARE", "FLAMINGO", "FARTHEST", "FIDDLING",
                "GUIDANCE", "GENERATE", "GRAPHICS", "GRADUATE", "GRATEFUL", "GENEROUS", "GUARDIAN", "GREETING", "GLORIOUS", "GEOMETRY", "GORGEOUS", "GIGANTIC", "GRAFFITI", "GASOLINE", "GLOSSARY", "GRAPHITE", "GRASPING", "GIVEAWAY", "GOLDFISH", "GALACTIC", "GULLIBLE", "GRIDLOCK", "GEMSTONE", "GARGOYLE",
                "HOSPITAL", "HARDWARE", "HANDLING", "HOMELAND", "HANDSOME", "HOMEWORK", "HEADACHE", "HUMOROUS", "HARMLESS", "HALLMARK", "HUMIDITY", "HESITANT", "HANDMADE", "HEDGEHOG", "HYPNOSIS", "HORSEMAN", "HATCHING", "HEIRLOOM", "HOLOGRAM", "HAZELNUT",
                "INDUSTRY", "INTEREST", "INCREASE", "INVOLVED", "INTERNAL", "IDENTIFY", "INDICATE", "INFORMED", "IDENTITY", "INCIDENT", "INTERIOR", "INSTANCE", "INSPIRED", "ISOLATED", "INDIRECT", "INFORMAL", "INNOCENT", "INTERACT", "INVASION", "INTERVAL", "INITIATE", "INCLINED", "INCOMING", "INVITING", "IMMINENT", "INFINITE", "ILLUSION", "INSTINCT", "INFLATED", "IGNORANT", "INSTRUCT", "INFINITY", "INNOVATE", "INTRIGUE",
                "JUNCTION", "JEOPARDY", "JOYSTICK", "JALAPENO", "JUNKYARD", "JOKESTER", "JIGGLING", "JINGLING", "JEWELLER", "JOKINGLY", "JOYOUSLY",
                "KEYBOARD", "KINDNESS", "KNITTING", "KANGAROO", "KILOGRAM", "KNAPSACK", "KNOCKOFF",
                "LANGUAGE", "LEARNING", "LOCATION", "LIGHTING", "LEVERAGE", "LAUGHTER", "LATITUDE", "LAVENDER", "LUMINOUS", "LEMONADE", "LOCALIZE",
                "MATERIAL", "MAJORITY", "MAINTAIN", "MOVEMENT", "MAGAZINE", "MULTIPLE", "MOUNTAIN", "MEDICINE", "MODELING", "MOMENTUM", "MODERATE", "MIDNIGHT", "MOBILITY", "MAGNETIC", "MAXIMIZE", "MEDIEVAL", "MINIMIZE", "MOLECULE", "MARATHON", "MOISTURE", "METAPHOR", "MISTAKEN", "MARITIME", "MUSICIAN", "MANIFEST", "MONUMENT", "MUSCULAR", "MANEUVER", "MOTIVATE", "METALLIC", "MULTIPLY", "MYSTICAL", "MATTRESS", "MUTATION", "MECHANIC", "MAJESTIC", "MUSHROOM", "MOSQUITO", "MAGICIAN",
                "NUMEROUS", "NEGATIVE", "NOTEBOOK", "NAVIGATE", "NOTATION", "NECKLACE", "NEIGHBOR", "NEGATION",
                "OFFERING", "ORIGINAL", "OFFICIAL", "ORDINARY", "OPPOSITE", "OCCASION", "OVERVIEW", "OPTIONAL", "ORGANIZE", "OPTIMISM", "OBSTACLE", "ORGANISM", "OPTIMIZE", "OVERLOAD", "OVERRIDE", "OBLIVION", "OVERTURE", "ORNAMENT", "OINTMENT", "OBSIDIAN",
                "POSSIBLE", "POSITION", "PROPERTY", "PERSONAL", "PRACTICE", "PROBABLY", "PREVIOUS", "POSITIVE", "PURCHASE", "PRESSURE", "PROGRESS", "PHYSICAL", "PLATFORM", "PRIORITY", "PARALLEL", "PRINTING", "PAINTING", "PORTABLE", "PERIODIC", "PRECIOUS", "PLEASANT", "PORTRAIT", "PERSUADE", "PATIENCE", "PASSWORD", "PARADISE", "PREMIERE", "PECULIAR", "POLISHED", "PARTICLE", "PAVEMENT", "PENTAGON", "PLUMBING", "PROHIBIT", "PROCLAIM",
                "QUESTION", "QUANTITY", "QUADRANT", "QUILTING", "QUARRIES", "QUARTERS",
                "RESEARCH", "REQUIRED", "RECEIVED", "RESPONSE", "REMEMBER", "RELEVANT", "RESOURCE", "RECOVERY", "RELIABLE", "RELATIVE", "REGISTER", "REACTION", "REPEATED", "RESIDENT", "RELATION", "REVISION", "RESTRICT", "ROTATION", "RETRIEVE", "REGULATE", "REVERSAL", "REGISTRY", "REACTIVE", "RAILROAD", "RELOCATE", "REFORMED", "READABLE", "REFINERY", "REDESIGN", "RHYTHMIC", "RESTRAIN", "RECREATE", "REDEFINE", "RADIATOR", "REDIRECT", "RATTLING", "RESTROOM", "REHEARSE", "RENOVATE", "RECHARGE", "REINDEER", "RESISTOR",
                "SOFTWARE", "STANDARD", "SECURITY", "SPECIFIC", "SOLUTION", "STRATEGY", "STRENGTH", "SEPARATE", "STANDING", "SLIGHTLY", "STRAIGHT", "SPEAKING", "SCHEDULE", "SUPPOSED", "SURPRISE", "SOMEBODY", "STRUGGLE", "SHOULDER", "SENTENCE", "SHIPPING", "SEQUENCE", "SURVIVAL", "SWIMMING", "SITUATED", "SEASONAL", "SHORTAGE", "SYNDROME", "SCENARIO", "SENSIBLE", "SUBURBAN", "SIMPLIFY", "SYMPATHY", "SYMBOLIC", "SUNSHINE", "SHIPMENT", "SANDWICH", "SHOWCASE", "SPELLING", "SPINNING", "SYMPHONY", "SPLENDID", "SPECIMEN", "SURROUND", "SHOCKING", "SINGULAR", "STIRRING", "SIDEWAYS", "SKELETON", "SIMULATE", "SYMMETRY", "SLIPPERY", "SCRAMBLE",
                "TOGETHER", "TRAINING", "THINKING", "TRANSFER", "THOUSAND", "TEACHING", "TOMORROW", "TRACKING", "THOROUGH", "TRAVELED", "TROPICAL", "TRIANGLE", "TERRIFIC", "TREASURE", "TRANSMIT", "TIMELINE", "TEENAGER", "TRILLION", "TEXTBOOK", "TEAMWORK", "TROUSERS", "THRILLER", "THANKFUL", "TUTORIAL", "TUMBLING", "TRAVERSE", "TRIMMING", "THROTTLE", "TEASPOON", "TELEPORT", "TRANQUIL", "TORTOISE", "TALISMAN",
                "ULTIMATE", "UNIVERSE", "UMBRELLA", "UPSTAIRS", "UPCOMING", "UNCOMMON", "UNSPOKEN", "UNDERDOG", "UNLISTED", "UNTITLED", "UNUSABLE", "USERNAME",
                "VALUABLE", "VARIABLE", "VERTICAL", "VELOCITY", "VACATION", "VIGOROUS", "VARIANCE", "VITALITY", "VOLCANIC", "VALIDATE", "VINEYARD", "VIGILANT", "VIRTUOUS", "VOCALIST", "VOLITION", "VILLAGER", "VAPORIZE", "VANQUISH", "VERTICES",
                "WIRELESS", "WEIGHTED", "WORKSHOP", "WILDLIFE", "WITHDRAW", "WARRANTY", "WITHDREW", "WORKLOAD", "WARDROBE", "WRAPPING", "WORKABLE", "WRECKAGE", "WITHHOLD", "WONDROUS", "WINDMILL", "WEARABLE", "WEREWOLF", "WRITABLE", "WINGSPAN", "WASHROOM", "WISHBONE",
                "XENOLITH",
                "YOURSELF", "YIELDING", "YEARBOOK",
                "ZUCCHINI"
            }
        };
    private string[][] pages;
    private string answer;
    private int page;
    private bool submitScreen;
    static int moduleIdCounter = 1;
    int moduleId;
    private bool moduleSolved;
    //Entering this comment so I can change the build
    public KMSelectable leftArrow;
    public KMSelectable rightArrow;
    public KMSelectable submit;
    public KMSelectable[] keyboard;
    public TextMesh[] arrowTexts;
    void Awake()
    {
        moduleId = moduleIdCounter++;
        leftArrow.OnInteract += delegate () { left(leftArrow); return false; };
        rightArrow.OnInteract += delegate () { right(rightArrow); return false; };
        submit.OnInteract += delegate () { submitWord(submit); return false; };
        foreach(KMSelectable keybutton in keyboard)
        {
            KMSelectable pressedButton = keybutton;
            pressedButton.OnInteract += delegate () { letterPress(pressedButton); return false; };
        }
    }
        // Use this for initialization
        void Start ()
    
    {
        submitText.text = "1";
        //Generating random word
        answer = wordList[2][UnityEngine.Random.Range(0, wordList[2].Count)].ToUpper();
        wordList[2].Remove(answer.ToUpper());
        Debug.LogFormat("[Black Cipher #{0}] Generated Word: {1}", moduleId, answer);     
        pages = new string[2][];
        pages[0] = new string[3];
        pages[1] = new string[3];
        string encrypt = blackcipher(answer);
        pages[0][0] = encrypt.ToUpper();
        page = 0;
        getScreens();
    }
    string blackcipher(string word)
    {
        Debug.LogFormat("[Black Cipher #{0}] Begin Enigma Encryption", moduleId);
        string encrypt = EnigmaEnc(word.ToUpper());
        Debug.LogFormat("[Black Cipher #{0}] Begin Railfence Transposition", moduleId);
        encrypt = RailfenceTrans(encrypt.ToUpper());
        Debug.LogFormat("[Black Cipher #{0}] Begin Digrafid Encryption", moduleId);
        encrypt = DigrafidEnc(encrypt.ToUpper());
        return encrypt;
    }
    string EnigmaEnc(string word)
    {
        string[][] rotors =
        {
           new string[]
             {
                "EKMFLGDQVZNTOWYHXUSPAIBRCJ",
                "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                "DQ"
            },
           new string[]
           {
                "AJDKSIRUXBLHWTMCQGZNPYFVOE",
                "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                "ER"
            },
           new string[]
           {
                "BDFHJLCPRTXVZNYEIWGAKMUSQO",
                "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                "IV"
            },
           new string[]
           {
                "ESOVPZJAYQUIRHXLNFTGKDCMWB",
                "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                "JW"
            },
           new string[]
           {
                "VZBRGITYUPSDNHLXAWMJQOFECK",
                "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                "ZM"
            },
           new string[]
           {
                "JPGVOUMFYQBENHZRDKASXLICTW",
                "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                "LY"
            },
           new string[]
           {
                "NZJHGRCXMYSWBOUFAIVLPEKQDT",
                "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                "HU"
            },
           new string[]
           {
                "FKQHTLXOCBJSPDZRAMEWNIUYGV",
                "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                "CP"
            }
        };
        string[][] reflectors =
        {
            new string[]
             {
                "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                "LUSNPQOMJIYAHDGEFXCVBTZRKW"
             },
            new string[]
             {
                "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                "XQUMFEPOWLTJDZHGBVYKCRIASN"
             },
            new string[]
            {
                "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                "ESKOAQMJYHCPGTDLFUBNRXZVIW"
            }
        };
        string[] roman = {"I", "II", "III", "IV", "V", "VI", "VII", "VIII"};
        string rotornums = "01234567";
        string reflectorlets = "ABC";
        string[][] rotorsetup = new string[5][];
        //Generate Reflector
        int num = UnityEngine.Random.Range(0, 3);
        rotorsetup[0] = reflectors[num];
        string rotorconfig = reflectorlets[num] + "";
        string rotorlets = "";
        //Generate Rotors
        for (int aa = 0; aa < 3; aa++)
        {
            char pickedrotor = rotornums[UnityEngine.Random.Range(0, rotornums.Length)];
            rotornums = rotornums.Replace(pickedrotor + "", "");
            rotorsetup[aa + 1] = rotors[pickedrotor - '0'];
            rotorconfig = rotorconfig + "-" + roman[pickedrotor - '0'];
            num = UnityEngine.Random.Range(0, 26);
            rotorsetup[aa + 1][0] = rotorsetup[aa + 1][0].Substring(num) + "" + rotorsetup[aa + 1][0].Substring(0, num);
            rotorsetup[aa + 1][1] = rotorsetup[aa + 1][1].Substring(num) + "" + rotorsetup[aa + 1][1].Substring(0, num);
            rotorlets = rotorlets + "" + rotorsetup[aa + 1][1][0];
        }
        rotorsetup[4] = new string[]
            {"ABCDEFGHIJKLMNOPQRSTUVWXYZ",
            "ABCDEFGHIJKLMNOPQRSTUVWXYZ"};
        //Generating Plugboard
        string plugboard = "";
        int numletterswaps = UnityEngine.Random.Range(3, 6);
        string alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        for (int aa = 0; aa < numletterswaps; aa++)
        {
            char l1 = alphabet[UnityEngine.Random.Range(0, alphabet.Length)];
            alphabet = alphabet.Replace(l1 + "", "");
            char l2 = alphabet[UnityEngine.Random.Range(0, alphabet.Length)];
            alphabet = alphabet.Replace(l2 + "", "");
            plugboard = plugboard + "" + l1 + "" + l2 + "-";
            for (int bb = 0; bb < 2; bb++)
            {
                rotorsetup[4][bb] = rotorsetup[4][bb].Replace(l1, '1');
                rotorsetup[4][bb] = rotorsetup[4][bb].Replace(l2, l1);
                rotorsetup[4][bb] = rotorsetup[4][bb].Replace('1', l2);
            }
        }
        plugboard = plugboard.Substring(0, plugboard.Length - 1);
        pages[1][0] = rotorconfig.ToUpper();
        pages[1][1] = rotorlets.ToUpper();
        pages[1][2] = plugboard.ToUpper();
        Debug.LogFormat("[Black Cipher #{0}] Rotor Config: {1}", moduleId, rotorconfig.ToUpper());
        Debug.LogFormat("[Black Cipher #{0}] Rotor Letters: {1}", moduleId, rotorlets.ToUpper());
        Debug.LogFormat("[Black Cipher #{0}] Plugboard: {1}", moduleId, plugboard.ToUpper());
        //Start Encrypting
        string encrypt = "";
        for(int cc = 0; cc < 6; cc++)
        {
            //Letter Encryption
            char let = word[cc];
            string logoutput = let + "";
            for(int dd = rotorsetup.Length - 1; dd > 0; dd--)
            {
                let = rotorsetup[dd - 1][0][rotorsetup[dd][1].IndexOf(let)];
                logoutput = logoutput + "->" + let;
            }
            let = rotorsetup[0][0][rotorsetup[0][1].IndexOf(let)];
            logoutput = logoutput + "->" + let;
            for(int ee = 0; ee < rotorsetup.Length - 1; ee++)
            {
                let = rotorsetup[ee + 1][1][rotorsetup[ee][0].IndexOf(let)];
                logoutput = logoutput + "->" + let;
            }
            encrypt = encrypt + "" + let;
            //Rotor Turning
            if(rotorsetup[2][1][0] == rotorsetup[2][2][0] || rotorsetup[2][1][0] == rotorsetup[2][2][1])
            {
                rotorsetup[2][0] = rotorsetup[2][0].Substring(1) + "" + rotorsetup[2][0][0];
                rotorsetup[2][1] = rotorsetup[2][1].Substring(1) + "" + rotorsetup[2][1][0];
                rotorsetup[1][0] = rotorsetup[1][0].Substring(1) + "" + rotorsetup[1][0][0];
                rotorsetup[1][1] = rotorsetup[1][1].Substring(1) + "" + rotorsetup[1][1][0];
            }
            else if(rotorsetup[3][1][0] == rotorsetup[3][2][0] || rotorsetup[3][1][0] == rotorsetup[3][2][1])
            {
                rotorsetup[2][0] = rotorsetup[2][0].Substring(1) + "" + rotorsetup[2][0][0];
                rotorsetup[2][1] = rotorsetup[2][1].Substring(1) + "" + rotorsetup[2][1][0];
            }
            rotorsetup[3][0] = rotorsetup[3][0].Substring(1) + "" + rotorsetup[3][0][0];
            rotorsetup[3][1] = rotorsetup[3][1].Substring(1) + "" + rotorsetup[3][1][0];
            Debug.LogFormat("[Black Cipher #{0}] {1}", moduleId, logoutput);
        }
        return encrypt;
    }
    string RailfenceTrans(string word)
    {
        string[] letterrows = new string[("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".IndexOf(Bomb.GetSerialNumber()[1]) % 4) + 2];
        Debug.LogFormat("[Black Cipher #{0}] Number of Rows: ({1} % 4) + 2 = {2}", moduleId, Bomb.GetSerialNumber()[1], letterrows.Length);
        int offset = 1;
        int cur = 0;
        letterrows[0] = word[0].ToString();
        for(int aa = 1; aa < 6; aa++)
        {
            cur += offset;
            letterrows[cur] = letterrows[cur] + "" + word[aa];
            if (cur == letterrows.Length - 1)
               offset = -1;
            else if(cur == 0)
               offset = 1;
        }
        string encrypt = "";
        for(int bb = 0; bb < letterrows.Length; bb++)
        {
            encrypt = encrypt + "" + letterrows[bb].ToUpper();
            Debug.LogFormat("[Black Cipher #{0}] Railfence Row #{1}: {2}", moduleId, bb + 1, letterrows[bb]);
        }
        return encrypt;
    }
    string DigrafidEnc(string word)
    {
        int length = UnityEngine.Random.Range(0, wordList.Count);
        string kw1 = wordList[length][UnityEngine.Random.Range(0, wordList[length].Count)].ToUpper();
        wordList[length].Remove(kw1.ToUpper());
        length = UnityEngine.Random.Range(0, wordList.Count);
        string kw2 = wordList[length][UnityEngine.Random.Range(0, wordList[length].Count)].ToUpper();
        wordList[length].Remove(kw2.ToUpper());
        pages[0][1] = kw1.ToUpper();
        pages[0][2] = kw2.ToUpper();
        string key1 = getKey(kw1.ToUpper(), "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "ABCDEFGHIJKLMNOPQRSTUVWXYZ".IndexOf(Bomb.GetSerialNumberLetters().First()) % 2 == 0);
        string key2 = getKey(kw2.ToUpper(), "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "ABCDEFGHIJKLMNOPQRSTUVWXYZ".IndexOf(Bomb.GetSerialNumberLetters().Last()) % 2 == 1);
        char l1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ#"[UnityEngine.Random.Range(0, 27)];
        char l2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ#"[UnityEngine.Random.Range(0, 27)];
        return DigrafidTry(word, key1, key2, l1, l2, "ABCDEFGHIJKLMNOPQRSTUVWXYZ#".Replace(l1 + "", ""), "ABCDEFGHIJKLMNOPQRSTUVWXYZ#".Replace(l2 + "", ""));
    }
    string DigrafidTry(string word, string k1, string k2, char l1, char l2, string alpha1, string alpha2)
    {
        string key1 = k1.ToUpper();
        string key2 = k2.ToUpper();
        if (l1 == '#')
            key1 = key1 + "#";
        else
            key1 = key1.Replace(l1, '#') + "" + l1;
        if (l2 == '#')
            key2 = key2 + "#";
        else
            key2 = key2.Replace(l2, '#') + "" + l2;
        string[] numbers = { "", "", "" };
        string[] grid3x3 = { "123", "456", "789" };
        List<string> logoutput = new List<string>();
        for (int aa = 0; aa < 3; aa++)
        {
            int num = key1.IndexOf(word[(aa * 2)]);
            numbers[0] = numbers[0] + "" + ((num % 9) + 1);
            int row = num / 9;
            num = key2.IndexOf(word[(aa * 2) + 1]);
            numbers[2] = numbers[2] + "" + ((num % 9) + 1);
            int col = num / 9;
            numbers[1] = numbers[1] + "" + grid3x3[row][col];
            logoutput.Add(word[aa * 2] + "" + word[(aa * 2) + 1] + " -> " + numbers[0][aa] + "" + numbers[1][aa] + "" + numbers[2][aa]);
        }
        string encrypt = "";
        for (int bb = 0; bb < 3; bb++)
        {
            encrypt = encrypt + "" + key1[((numbers[bb][0] - '0') - 1) + (((numbers[bb][1] - '0') - 1) / 3) * 9];
            encrypt = encrypt + "" + key2[((numbers[bb][2] - '0') - 1) + (((numbers[bb][1] - '0') - 1) % 3) * 9];
            logoutput.Add("Digrafid Row #" + (bb + 1) + ": " + numbers[bb] + " -> " + encrypt[bb * 2] + "" + encrypt[(bb * 2) + 1]);    
        }
        if (encrypt.Contains('#'))
        {
            if(alpha1.Length == 0)
            {
                alpha1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ#";
                l2 = alpha2[UnityEngine.Random.Range(0, alpha2.Length)];
                alpha2.Replace(l2 + "", "");
            }
            l1 = alpha1[UnityEngine.Random.Range(0, alpha1.Length)];
            alpha1.Replace(l1 + "", "");
            return DigrafidTry(word.ToUpper(), k1, k2, l1, l2, alpha1, alpha2);
        }
        else
        {
            Debug.LogFormat("[Black Cipher #{0}] Key A: {1}", moduleId, key1);
            Debug.LogFormat("[Black Cipher #{0}] Key B: {1}", moduleId, key2);
            for (int aa = 0; aa < logoutput.Count; aa++)
                Debug.LogFormat("[Black Cipher #{0}] {1}", moduleId, logoutput[aa]);
            arrowTexts[0].text = l1 + "";
            arrowTexts[1].text = l2 + "";
            return encrypt;
        }
            
    }
    string getKey(string k, string alpha, bool start)
    {
        for (int aa = 0; aa < k.Length; aa++)
        {
            for (int bb = aa + 1; bb < k.Length; bb++)
            {
                if (k[aa] == k[bb])
                {
                    k = k.Substring(0, bb) + "" + k.Substring(bb + 1);
                    bb--;
                }
            }
            alpha = alpha.Replace(k[aa].ToString(), "");
        }
        if (start)
            return (k + "" + alpha);
        else
            return (alpha + "" + k);
    }
	int correction(int p, int max)
    {
        while (p < 0)
            p += max;
        while (p >= max)
            p -= max;
        return p;
    }
    void left(KMSelectable arrow)
    {
        if(!moduleSolved)
        {
            Audio.PlaySoundAtTransform(sounds[0].name, transform);
            submitScreen = false;
            arrow.AddInteractionPunch();
            page--;
            page = correction(page, pages.Length);
            getScreens();
        }
    }
    void right(KMSelectable arrow)
    {
        if(!moduleSolved)
        {
            Audio.PlaySoundAtTransform(sounds[0].name, transform);
            submitScreen = false;
            arrow.AddInteractionPunch();
            page++;
            page = correction(page, pages.Length);
            getScreens();
        }
    }
    private void getScreens()
    {
        submitText.text = (page + 1) + "";
        screenTexts[0].text = pages[page][0];
        screenTexts[1].text = pages[page][1];
        screenTexts[2].text = pages[page][2];
        if(page == 0)
        {
            screenTexts[0].fontSize = 40;
            screenTexts[1].fontSize = 35;
            screenTexts[2].fontSize = 35;
        }
        else
        {
            screenTexts[0].fontSize = 35;
            screenTexts[1].fontSize = 40;
            screenTexts[2].fontSize = 25;
        }
            

    }
    void submitWord(KMSelectable submitButton)
    {
        if(!moduleSolved)
        {
            submitButton.AddInteractionPunch();
            if(screenTexts[2].text.Equals(answer))
            {
                Audio.PlaySoundAtTransform(sounds[2].name, transform);
                module.HandlePass();
                moduleSolved = true;
                screenTexts[2].text = "";
            }
            else
            {
                Audio.PlaySoundAtTransform(sounds[3].name, transform);
                module.HandleStrike();
                page = 0;
                getScreens();
                submitScreen = false;
            }
        }
    }
    void letterPress(KMSelectable pressed)
    {
        if(!moduleSolved)
        {
            pressed.AddInteractionPunch();
            Audio.PlaySoundAtTransform(sounds[1].name, transform);
            if (submitScreen)
            {
                if(screenTexts[2].text.Length < 6)
                {
                    screenTexts[2].text = screenTexts[2].text + "" + pressed.GetComponentInChildren<TextMesh>().text;
                }
            }
            else
            {
                submitText.text = "SUB";
                screenTexts[0].text = "";
                screenTexts[1].text = "";
                screenTexts[2].text = pressed.GetComponentInChildren<TextMesh>().text;
                screenTexts[2].fontSize = 40;
                submitScreen = true;
            }
        }
    }
#pragma warning disable 414
    private string TwitchHelpMessage = "Move to other screens using !{0} right|left|r|l|. Submit the decrypted word with !{0} submit qwertyuiopasdfghjklzxcvbnm";
#pragma warning restore 414
    IEnumerator ProcessTwitchCommand(string command)
    {

        if (command.EqualsIgnoreCase("right") || command.EqualsIgnoreCase("r"))
        {
            yield return null;
            rightArrow.OnInteract();
            yield return new WaitForSeconds(0.1f);

        }
        if (command.EqualsIgnoreCase("left") || command.EqualsIgnoreCase("l"))
        {
            yield return null;
            leftArrow.OnInteract();
            yield return new WaitForSeconds(0.1f);
        }
        string[] split = command.ToUpperInvariant().Split(new[] { " " }, StringSplitOptions.RemoveEmptyEntries);
        if (split.Length != 2 || !split[0].Equals("SUBMIT") || split[1].Length != 6) yield break;
        int[] buttons = split[1].Select(getPositionFromChar).ToArray();
        if (buttons.Any(x => x < 0)) yield break;

        yield return null;

        yield return new WaitForSeconds(0.1f);
        foreach (char let in split[1])
        {
            keyboard[getPositionFromChar(let)].OnInteract();
            yield return new WaitForSeconds(0.1f);
        }
        yield return new WaitForSeconds(0.1f);
        submit.OnInteract();
        yield return new WaitForSeconds(0.1f);
    }
    IEnumerator TwitchHandleForcedSolve()
    {
        if (submitScreen && !answer.StartsWith(screenTexts[2].text))
        {
            KMSelectable[] arrows = new KMSelectable[] { leftArrow, rightArrow };
            arrows[UnityEngine.Random.Range(0, 2)].OnInteract();
            yield return new WaitForSeconds(0.1f);
        }
        int start = submitScreen ? screenTexts[2].text.Length : 0;
        for (int i = start; i < 6; i++)
        {
            keyboard[getPositionFromChar(answer[i])].OnInteract();
            yield return new WaitForSeconds(0.1f);
        }
        submit.OnInteract();
        yield return new WaitForSeconds(0.1f);
    }
    private int getPositionFromChar(char c)
    {
        return "QWERTYUIOPASDFGHJKLZXCVBNM".IndexOf(c);
    }
}
